name: CI
on:
  pull_request:
  push:
    tags:
      - '*'
  workflow_dispatch:
jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x ]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org/'
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Code Test
      run: npm run test

  Release:
    env:
      DIST_ARCHIVE_NAME: ${{ github.event.repository.name }}-dist
    runs-on: ubuntu-latest
    needs: [Test]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org/'
        cache: 'npm'
    - name: Install dependencies
      run: |
        npm install
        npm run pkg
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: build changelog
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@v2.9.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        configuration: ".github/config/changelog_configuration.json"
        ignorePreReleases: "false"
    - name: Archive Release
      uses: papeloto/action-zip@v1
      with:
        files: build/ READEME.md package.json LICENSE
        recursive: false
        dest: ${{ env.DIST_ARCHIVE_NAME }}-${{ steps.get_version.outputs.VERSION }}.zip
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{steps.build_changelog.outputs.changelog}}
        files:  |
          ${{ env.DIST_ARCHIVE_NAME }}-${{ steps.get_version.outputs.VERSION }}
          release/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}

  Push:
    runs-on: ubuntu-latest
    needs: [Release]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Push Result Message
        uses: funnyzak/pushoo-action@main
        with:
          platforms: ${{ secrets.PUSH_PLATFORMS }}
          tokens: ${{ secrets.PUSH_TOKEN }}
          content: |
            # ${{github.repository}} Released
          options: '{"bark": { "url": "https://github.com/funnyzak" }}'
          debug: false
